import Head from "next/head";
import Image from "next/image";
import Button from "@mui/material/Button";
import Container from "@mui/material/Container";
import Typography from "@mui/material/Typography";
import Box from "@mui/material/Box";
import Link from "@/src/Link";
import SwipeView from "@/components/SwipeView";
import styles from "@/styles/Home.module.scss";
import {
  Accordion,
  AccordionDetails,
  AccordionSummary,
  Fade,
  Stack,
} from "@mui/material";
import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
import { useMemo, useRef, useState } from "react";

import TopMenu from "@/components/TopMenu";
import { nanoid } from "nanoid";
import useLocalStorageState from "use-local-storage-state";
import { version } from "./[gameId]/[sessionId]";

export interface SessionItemType {
  gameId: string;
  gameName: string;
  sessionId: string;
  sessionName: string;
  sessionKey: string;
}

export interface SessionListType {
  sessions: SessionItemType[];
}

export default function MySessions() {
  const menuColors = { color: "#6750A4", hover: "#6750A4" };

  const [sessions, setSessions, { removeItem }] = useLocalStorageState<
    SessionListType | { sessions: [] }
  >(`indivisivel-online-push-session-list-${version}`, {
    defaultValue: { sessions: [] },
  });

  function clearAll() {
    removeItem();
    localStorage.clear();
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Box>
          <Container>
            <TopMenu colors={menuColors}></TopMenu>
          </Container>
        </Box>

        <Box bgcolor={"#6750A4"} paddingTop={"4rem"}>
          <Container>
            <Typography variant="h1" color={"white"}>
              Minhas Sessões
            </Typography>
            <Button color={"error"} onClick={clearAll} variant={"contained"}>
              Limpar Todas as Sessões
            </Button>
            <Box paddingY={4}>
              {sessions.sessions.map((session, index) => {
                if (session.sessionKey && session.sessionId) {
                  return (
                    <SessionListItem
                      key={index}
                      gameId={session.gameId}
                      gameName={session.gameName}
                      sessionId={session.sessionId}
                      sessionName={session.sessionName}
                      createdAt={""}
                      lastPlayed={""}
                      sessionKey={session.sessionKey}
                    ></SessionListItem>
                  );
                }
              })}
            </Box>
          </Container>
        </Box>
      </main>
    </>
  );
}

interface SessionListItemPropsType {
  gameId: string;
  gameName: string;
  sessionId: string;
  sessionName: string;
  sessionKey: string;
  createdAt: string | Date;
  lastPlayed: string | Date;
  messagesCount?: number;
  charactersCount?: number;
}

function SessionListItem({
  gameId,
  gameName,
  sessionId,
  sessionName,
  sessionKey,
  createdAt,
  lastPlayed,
  messagesCount,
  charactersCount,
}: SessionListItemPropsType) {
  const [expanded, setExpanded] = useState<string | false>(false);

  const handleChange =
    (panel: string) => (event: React.SyntheticEvent, isExpanded: boolean) => {
      setExpanded(isExpanded ? panel : false);
    };
  return (
    <Accordion>
      <AccordionSummary
        expandIcon={<ExpandMoreIcon />}
        aria-controls="panel1bh-content"
        id="panel1bh-header"
      >
        <Typography sx={{ width: "33%", flexShrink: 0 }}>
          {sessionName}
        </Typography>
        <Typography sx={{ width: "33%", color: "text.secondary" }}>
          {gameName}
        </Typography>
        <Typography sx={{ color: "text.secondary" }}>LastPlayed</Typography>
      </AccordionSummary>
      <AccordionDetails>
        <Typography sx={{ width: "33%", flexShrink: 0 }}>
          {sessionKey}
        </Typography>
        <Typography>
          Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat.
          Aliquam eget maximus est, id dignissim quam.
        </Typography>
        <Link
          href={`/${gameId}/${sessionId}`}
          underline={"none"}
          target="_blank"
          rel="noopener noreferrer"
        >
          <Button variant="outlined" color={"primary"}>
            Continuar Jogando
          </Button>
        </Link>
      </AccordionDetails>
    </Accordion>
  );
}
